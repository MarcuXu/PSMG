import numpy as np

n_tasks = 40

# stl results
BASE = np.array(
    [0.6736886, 0.68121034, 0.81524944, 0.5760289, 0.7205613,
     0.8555076, 0.38203922, 0.58225113, 0.787647, 0.8321292,
     0.5029583, 0.68694085, 0.6781237, 0.5240381, 0.5161666,
     0.95694304, 0.6968786, 0.67976356, 0.8808315, 0.8582131,
     0.97034, 0.93267566, 0.5057539, 0.40307626, 0.9703734,
     0.48644206, 0.60786104, 0.5261031, 0.56907415, 0.59815097,
     0.6858371, 0.924108, 0.5424991, 0.7406311, 0.71019936,
     0.87365365, 0.9305602, 0.33704284, 0.7647628, 0.91907]
)

SIGN = np.array([1] * n_tasks)
KK = np.ones(n_tasks) * -1


def delta_fn(a):
    # *100 for percentage
    return (KK ** SIGN * (a - BASE) / BASE).mean() * 100.0


psmg = np.array([0.66314465, 0.6998716,  0.8265374,  0.6106443,  0.71039355, 0.8564706,
                0.50622475, 0.6126753,  0.6380781,  0.8371299,  0.29906544, 0.66084486,
                0.68001616, 0.5364478,  0.54196155, 0.9318453,  0.6644182,  0.6471127,
                0.8841846,  0.8619348,  0.9660285,  0.91927344, 0.5061461,  0.46894577,
                 0.96648127, 0.3970516, 0.49762282, 0.43706706, 0.32224825, 0.60596544, 0.6901885, 0.92159003, 0.49457145, 0.7307542, 0.7002012, 0.8736718, 0.9419575, 0.37763807, 0.73659676, 0.9206073])
imtl = np.array([0.662423, 0.665783, 0.818785, 0.561001, 0.682861, 0.853249, 0.421144, 0.574463, 0.784683, 0.836589, 0.49997, 0.603008, 0.65738, 0.517264, 0.532018, 0.922063, 0.701806, 0.687252, 0.882556,
                0.864719, 0.972997, 0.920774, 0.529638, 0.36927, 0.970758, 0.466751, 0.605276, 0.466815, 0.552882, 0.594073, 0.716006, 0.916843, 0.516575, 0.691428, 0.682021, 0.866776, 0.938881, 0.408585, 0.751725, 0.919949])
print(delta_fn(psmg))
